distri<-"runif(n,a,b)"
quote(distri)
eval(distri)
?runif
distri<-runif
eval(quote(distri,list(n=1,min=0,max=2))
eval(quote(distri),list(n=1,min=0,max=2))
evalq(distri,list(n=1,min=0,max=2))
?expression
parse(distri)
distri<-"runif(n,a,b)"
parse(distri)
eval(parse(distri))
parse("5+5")
eval(parse(text="5+5"))
eval(parse(text=distri))
evalq(parse(text=distri),list(n=10))
evalq(parse(text=distri)
)
eval(parse(distri))
eval(parse(text=distri))
evalq(parse(text=distri))
eval(parse(text=distri),list(n=1))
eval(parse(text=distri),list(n=1,a=0,b=2))
'multiTL_fun'<-
function(irradiation_dose=c(200,200,200,400,400,400,600,600,600),model = "Bailey2001",
scatter=runif(1,0.8,1.2),noise_a=0.9,noise_b=1.1,
distri="runif(n,a,b)"){
#The simulations were performed at 200 sβ, considered as the natural irradiation, and at 400 and 800 sβ,
#corresponding respectively to Nat +200 sβ and Nat + 400 sβ.
model.output <- lapply(irradiation_dose, function(x){
sequence <- list(IRR = c(20, x, 0.1),
#PH = c(220, 10, 5),
TL=c(20,400,5))
data <- model_LuminescenceSignals(
sequence = sequence,
model,
plot = FALSE,
verbose = FALSE,
simulate_sample_history = TRUE )
return(get_RLum(data, recordType = "TL$", drop = FALSE))
})
##combine output curves
TL_curve.merged <- merge_RLum(model.output)
get_TL_curve.merged<-get_RLum(TL_curve.merged)
n.pt<-length(get_TL_curve.merged[[1]]@data [,1])
n.irr<-length(irradiation_dose)
##plot
plot_RLum( object = TL_curve.merged,
xlab = "Temperature [°C]",
ylab = "TL signal [a.u.]",
main = "TL signal with various dose",
legend.text = paste("dose", irradiation_dose, "Gy"),
combine = TRUE)
y<-x<-array(dim=c(n.pt,n.irr))
distri_noise<-parse(text=distri)
## scattering and/or noising glow curves
for (i in 1:n.irr){
x[,i]<-round(get_TL_curve.merged[[i]]@data [,1],1)
y[,i]<-get_TL_curve.merged[[i]]@data [,2]*scatter*eval(distri_noise, list(n=n.pt,a=noise_a,b=noise_b))#choix distribution noise ?
}
##plot
plot(x[,c(7,8,9)],y[,c(7,8,9)],
col=4,
type="l",
xlab = "Temperature [°C]",
ylab = "TL signal [a.u.]",
main = "TL signal with various dose"
)
lines(x[,c(4,5,6)],y[,c(4,5,6)],col=3)
lines(x[,c(1,2,3)],y[,c(1,2,3)],col=2)
legend("topright",
legend = paste("dose",unique(irradiation_dose)," Gy"),col=c(2,3,4),lty=1)
multiTL<-list( Dose=c(0,0,0,200,200,200,400,400,400), df.T=x, df.y=y, n.iter=10 )
}
multiTL_fun()
multiTL_fun(noise_a = 0,noise_b = 2)
multiTL_fun(noise_a = 0,noise_b = 2,distri="rnorm(n,a,b)")
multiTL_fun(noise_a = 0,noise_b = 0.2,distri="rnorm(n,a,b)")
?rnorm
require(Luminescence)
require(RLumModel)
'multiTL_fun'<-
function(irradiation_dose=c(20,20,20,40,40,40,60,60,60),model = "Bailey2001",
scatter=runif(1,0.8,1.2),noise_a=0.9,noise_b=1.1,
distri_noise="runif(n,a,b)"){
#The simulations were performed at 200 sβ, considered as the natural irradiation, and at 400 and 800 sβ,
#corresponding respectively to Nat +200 sβ and Nat + 400 sβ.
model.output <- lapply(irradiation_dose, function(x){
sequence <- list(IRR = c(20, x, 0.1),
#PH = c(220, 10, 5),
TL=c(20,400,5))
data <- model_LuminescenceSignals(
sequence = sequence,
model,
plot = FALSE,
verbose = FALSE,
simulate_sample_history = TRUE )
return(get_RLum(data, recordType = "TL$", drop = FALSE))
})
##combine output curves
TL_curve.merged <- merge_RLum(model.output)
get_TL_curve.merged<-get_RLum(TL_curve.merged)
n.pt<-length(get_TL_curve.merged[[1]]@data [,1])
n.irr<-length(irradiation_dose)
##plot
plot_RLum( object = TL_curve.merged,
xlab = "Temperature [°C]",
ylab = "TL signal [a.u.]",
main = "TL signal with various dose",
legend.text = paste("dose", irradiation_dose, "Gy"),
combine = TRUE)
y<-x<-array(dim=c(n.pt,n.irr))
dnoise<-parse(text=distri_noise)
## scattering and/or noising glow curves
for (i in 1:n.irr){
x[,i]<-round(get_TL_curve.merged[[i]]@data [,1],1)
y[,i]<-get_TL_curve.merged[[i]]@data [,2]*scatter*eval(dnoise, list(n=n.pt,a=noise_a,b=noise_b))#
}
##plot
plot(x[,c(7,8,9)],y[,c(7,8,9)],
col=4,
type="l",
xlab = "Temperature [°C]",
ylab = "TL signal [a.u.]",
main = "TL signal with various dose"
)
lines(x[,c(4,5,6)],y[,c(4,5,6)],col=3)
lines(x[,c(1,2,3)],y[,c(1,2,3)],col=2)
legend("topright",
legend = paste("dose",unique(irradiation_dose)," Gy"),col=c(2,3,4),lty=1)
multiTL<-list( Dose=c(0,0,0,200,200,200,400,400,400), df.T=x, df.y=y, n.iter=10 )
}
multiTL_fun(distri_noise = "rnorm",noise_a = 1, noise_b=0.2)
multiTL_fun()
multiTL_fun(distri_noise = "runif",noise_a =0.9, noise_b=1.1)
multiTL_fun(distri_noise = "runif",noise_a =0.9)
multiTL_fun(distri_noise = "runif",noise_a=0.9,noise_b=1.1)
multiTL_fun(distri_noise = "runif(n,a,b)",noise_a=0.9,noise_b=1.1)
multiTL_fun(distri_noise = "rnorm(n,a,b)",noise_a = 1, noise_b=0.2)
'multiTL_fun'<-
function(irradiation_dose=c(20,20,20,40,40,40,60,60,60),model = "Bailey2001",
scatter=runif(1,0.8,1.2),
distri_noise="runif(n,a,b)",par_noise=c(0.9,1.1)){
#The simulations were performed at 200 sβ, considered as the natural irradiation, and at 400 and 800 sβ,
#corresponding respectively to Nat +200 sβ and Nat + 400 sβ.
model.output <- lapply(irradiation_dose, function(x){
sequence <- list(IRR = c(20, x, 0.1),
#PH = c(220, 10, 5),
TL=c(20,400,5))
data <- model_LuminescenceSignals(
sequence = sequence,
model,
plot = FALSE,
verbose = FALSE,
simulate_sample_history = TRUE )
return(get_RLum(data, recordType = "TL$", drop = FALSE))
})
##combine output curves
TL_curve.merged <- merge_RLum(model.output)
get_TL_curve.merged<-get_RLum(TL_curve.merged)
n.pt<-length(get_TL_curve.merged[[1]]@data [,1])
n.irr<-length(irradiation_dose)
##plot
plot_RLum( object = TL_curve.merged,
xlab = "Temperature [°C]",
ylab = "TL signal [a.u.]",
main = "TL signal with various dose",
legend.text = paste("dose", irradiation_dose, "Gy"),
combine = TRUE)
y<-x<-array(dim=c(n.pt,n.irr))
dnoise<-parse(text=distri_noise)
a<-par_noise[1]
b<-par_noise[2]
## scattering and/or noising glow curves
for (i in 1:n.irr){
x[,i]<-round(get_TL_curve.merged[[i]]@data [,1],1)
y[,i]<-get_TL_curve.merged[[i]]@data [,2]*scatter*eval(dnoise, list(n=n.pt,a=a,b=b))#
}
##plot
plot(x[,c(7,8,9)],y[,c(7,8,9)],
col=4,
type="l",
xlab = "Temperature [°C]",
ylab = "TL signal [a.u.]",
main = "TL signal with various dose"
)
lines(x[,c(4,5,6)],y[,c(4,5,6)],col=3)
lines(x[,c(1,2,3)],y[,c(1,2,3)],col=2)
legend("topright",
legend = paste("dose",unique(irradiation_dose)," Gy"),col=c(2,3,4),lty=1)
multiTL<-list( Dose=c(0,0,0,200,200,200,400,400,400), df.T=x, df.y=y, n.iter=10 )
}
multiTL_fun()
multiTL_fun(distri_noise = "rnorm",par_noise = c(1,0.3))
multiTL_fun(distri_noise = "rnorm(n,a,b)",par_noise = c(1,0.3))
eval("runif(n,min,max)",list(n=1,0,1))
eval(parse(text="runif(n,min,max)"),list(n=1,0,1))
eval(parse(text="runif(n,min,max)"),list(n=1,min=0,max=1))
eval(parse(text="runif(n)"),list(n=1))
'multiTL_fun'<-
function(irradiation_dose=c(20,20,20,40,40,40,60,60,60),model = "Bailey2001",
scatter=runif(1,0.8,1.2),
distri_noise="runif(n,a,b)",par_noise=c(0.9,1.1)){
#The simulations were performed at 200 sβ, considered as the natural irradiation, and at 400 and 800 sβ,
#corresponding respectively to Nat +200 sβ and Nat + 400 sβ.
model.output <- lapply(irradiation_dose, function(x){
sequence <- list(IRR = c(20, x, 0.1),
#PH = c(220, 10, 5),
TL=c(20,400,5))
data <- model_LuminescenceSignals(
sequence = sequence,
model,
plot = FALSE,
verbose = FALSE,
simulate_sample_history = TRUE )
return(get_RLum(data, recordType = "TL$", drop = FALSE))
})
##combine output curves
TL_curve.merged <- merge_RLum(model.output)
get_TL_curve.merged<-get_RLum(TL_curve.merged)
n.pt<-length(get_TL_curve.merged[[1]]@data [,1])
n.irr<-length(irradiation_dose)
##plot
plot_RLum( object = TL_curve.merged,
xlab = "Temperature [°C]",
ylab = "TL signal [a.u.]",
main = "TL signal with various dose",
legend.text = paste("dose", irradiation_dose, "Gy"),
combine = TRUE)
y<-x<-array(dim=c(n.pt,n.irr))
dnoise<-parse(text=distri_noise)
a<-par_noise[1]
b<-par_noise[2]
noise<-eval(dnoise, list(n=n.pt,a=a,b=b))
## scattering and/or noising glow curves
for (i in 1:n.irr){
x[,i]<-round(get_TL_curve.merged[[i]]@data [,1],1)
y[,i]<-get_TL_curve.merged[[i]]@data [,2]*scatter*noise#
}
##plot
plot(x[,c(7,8,9)],y[,c(7,8,9)],
col=4,
type="l",
xlab = "Temperature [°C]",
ylab = "TL signal [a.u.]",
main = "TL signal with various dose"
)
lines(x[,c(4,5,6)],y[,c(4,5,6)],col=3)
lines(x[,c(1,2,3)],y[,c(1,2,3)],col=2)
legend("topright",
legend = paste("dose",unique(irradiation_dose)," Gy"),col=c(2,3,4),lty=1)
multiTL<-list( Dose=c(0,0,0,200,200,200,400,400,400), df.T=x, df.y=y, n.iter=10 )
}
multiTL_fun(distri_noise = "rnorm(n,a,b)",par_noise = c(1,0.3))
dnoise<-parse(text="runif")
dnoise
par_noise<-c(a=0.9,b=1.1)
par_noise<-list(a=0.9,b=1.1)
eval(dnoise,c(list(n=1),par_noise))
dnoise<-parse(text="runif(n,a,b)")
eval(dnoise,c(list(n=1),par_noise))
'multiTL_fun'<-
function(irradiation_dose=c(20,20,20,40,40,40,60,60,60),model = "Bailey2001",
distri_scatter="runif(1,a,b)",par_scatter=list(a=0.8,b=1.2),
distri_noise="runif(n,a,b)",par_noise=list(a=0.9,b=1.1)){
#The simulations were performed at 200 sβ, considered as the natural irradiation, and at 400 and 800 sβ,
#corresponding respectively to Nat +200 sβ and Nat + 400 sβ.
model.output <- lapply(irradiation_dose, function(x){
sequence <- list(IRR = c(20, x, 0.1),
#PH = c(220, 10, 5),
TL=c(20,400,5))
data <- model_LuminescenceSignals(
sequence = sequence,
model,
plot = FALSE,
verbose = FALSE,
simulate_sample_history = TRUE )
return(get_RLum(data, recordType = "TL$", drop = FALSE))
})
##combine output curves
TL_curve.merged <- merge_RLum(model.output)
get_TL_curve.merged<-get_RLum(TL_curve.merged)
n.pt<-length(get_TL_curve.merged[[1]]@data [,1])
n.irr<-length(irradiation_dose)
##plot
plot_RLum( object = TL_curve.merged,
xlab = "Temperature [°C]",
ylab = "TL signal [a.u.]",
main = "TL signal with various dose",
legend.text = paste("dose", irradiation_dose, "Gy"),
combine = TRUE)
y<-x<-array(dim=c(n.pt,n.irr))
dscatter<-parse(text=distri_noise)
scatter<-eval(dscatter, par_scatter)
dnoise<-parse(text=distri_noise)
noise<-eval(dnoise, c(list(n=n.pt),par_noise))
## scattering and/or noising glow curves
for (i in 1:n.irr){
x[,i]<-round(get_TL_curve.merged[[i]]@data [,1],1)
y[,i]<-get_TL_curve.merged[[i]]@data [,2]*scatter*noise#
}
##plot
plot(x[,c(7,8,9)],y[,c(7,8,9)],
col=4,
type="l",
xlab = "Temperature [°C]",
ylab = "TL signal [a.u.]",
main = "TL signal with various dose"
)
lines(x[,c(4,5,6)],y[,c(4,5,6)],col=3)
lines(x[,c(1,2,3)],y[,c(1,2,3)],col=2)
legend("topright",
legend = paste("dose",unique(irradiation_dose)," Gy"),col=c(2,3,4),lty=1)
multiTL<-list( Dose=c(0,0,0,200,200,200,400,400,400), df.T=x, df.y=y, n.iter=10 )
}
multiTL_fun(distri_noise = "rnorm(n,a,b)",par_noise = list(a=1,b=0.3))
'multiTL_fun'<-
function(irradiation_dose=c(20,20,20,40,40,40,60,60,60),model = "Bailey2001",
distri_scatter="runif(1,a,b)",par_scatter=list(a=0.8,b=1.2),
distri_noise="runif(n,a,b)",par_noise=list(a=0.9,b=1.1)){
#The simulations were performed at 200 sβ, considered as the natural irradiation, and at 400 and 800 sβ,
#corresponding respectively to Nat +200 sβ and Nat + 400 sβ.
model.output <- lapply(irradiation_dose, function(x){
sequence <- list(IRR = c(20, x, 0.1),
#PH = c(220, 10, 5),
TL=c(20,400,5))
data <- model_LuminescenceSignals(
sequence = sequence,
model,
plot = FALSE,
verbose = FALSE,
simulate_sample_history = TRUE )
return(get_RLum(data, recordType = "TL$", drop = FALSE))
})
##combine output curves
TL_curve.merged <- merge_RLum(model.output)
get_TL_curve.merged<-get_RLum(TL_curve.merged)
n.pt<-length(get_TL_curve.merged[[1]]@data [,1])
n.irr<-length(irradiation_dose)
##plot
plot_RLum( object = TL_curve.merged,
xlab = "Temperature [°C]",
ylab = "TL signal [a.u.]",
main = "TL signal with various dose",
legend.text = paste("dose", irradiation_dose, "Gy"),
combine = TRUE)
y<-x<-array(dim=c(n.pt,n.irr))
dscatter<-parse(text=distri_scatter)
scatter<-eval(dscatter, par_scatter)
dnoise<-parse(text=distri_noise)
noise<-eval(dnoise, c(list(n=n.pt),par_noise))
## scattering and/or noising glow curves
for (i in 1:n.irr){
x[,i]<-round(get_TL_curve.merged[[i]]@data [,1],1)
y[,i]<-get_TL_curve.merged[[i]]@data [,2]*scatter*noise#
}
##plot
plot(x[,c(7,8,9)],y[,c(7,8,9)],
col=4,
type="l",
xlab = "Temperature [°C]",
ylab = "TL signal [a.u.]",
main = "TL signal with various dose"
)
lines(x[,c(4,5,6)],y[,c(4,5,6)],col=3)
lines(x[,c(1,2,3)],y[,c(1,2,3)],col=2)
legend("topright",
legend = paste("dose",unique(irradiation_dose)," Gy"),col=c(2,3,4),lty=1)
multiTL<-list( Dose=c(0,0,0,200,200,200,400,400,400), df.T=x, df.y=y, n.iter=10 )
}
multiTL_fun(distri_noise = "rnorm(n,a,b)",par_noise = list(a=1,b=0.3))
multiTL_fun(distri_scatter = "rnorm(1,a,b)",par_scatter = list(a=1,b=0.3))
multiTL_fun(distri_scatter = "rnorm(1,a,b)",par_scatter = list(a=1,b=2))
multiTL_fun(distri_scatter = "runif(1,a,b)",par_scatter = list(a=0.9,b=1.2))
multiTL_fun()
'multiTL_fun'<-
function(irradiation_dose=c(20,20,20,40,40,40,60,60,60),model = "Bailey2001",
distri_scatter="runif(1,s,t)",par_scatter=list(s=0.8,t=1.2),
distri_noise="runif(n,a,b)",par_noise=list(a=0.9,b=1.1)){
#The simulations were performed at 200 sβ, considered as the natural irradiation, and at 400 and 800 sβ,
#corresponding respectively to Nat +200 sβ and Nat + 400 sβ.
model.output <- lapply(irradiation_dose, function(x){
sequence <- list(IRR = c(20, x, 0.1),
#PH = c(220, 10, 5),
TL=c(20,400,5))
data <- model_LuminescenceSignals(
sequence = sequence,
model,
plot = FALSE,
verbose = FALSE,
simulate_sample_history = TRUE )
return(get_RLum(data, recordType = "TL$", drop = FALSE))
})
##combine output curves
TL_curve.merged <- merge_RLum(model.output)
get_TL_curve.merged<-get_RLum(TL_curve.merged)
n.pt<-length(get_TL_curve.merged[[1]]@data [,1])
n.irr<-length(irradiation_dose)
##plot
plot_RLum( object = TL_curve.merged,
xlab = "Temperature [°C]",
ylab = "TL signal [a.u.]",
main = "TL signal with various dose",
legend.text = paste("dose", irradiation_dose, "Gy"),
combine = TRUE)
y<-x<-array(dim=c(n.pt,n.irr))
dscatter<-parse(text=distri_scatter)
scatter<-eval(dscatter, par_scatter)
dnoise<-parse(text=distri_noise)
noise<-eval(dnoise, c(list(n=n.pt),par_noise))
## scattering and/or noising glow curves
for (i in 1:n.irr){
x[,i]<-round(get_TL_curve.merged[[i]]@data [,1],1)
y[,i]<-get_TL_curve.merged[[i]]@data [,2]*scatter*noise#
}
##plot
plot(x[,c(7,8,9)],y[,c(7,8,9)],
col=4,
type="l",
xlab = "Temperature [°C]",
ylab = "TL signal [a.u.]",
main = "TL signal with various dose"
)
lines(x[,c(4,5,6)],y[,c(4,5,6)],col=3)
lines(x[,c(1,2,3)],y[,c(1,2,3)],col=2)
legend("topright",
legend = paste("dose",unique(irradiation_dose)," Gy"),col=c(2,3,4),lty=1)
multiTL<-list( Dose=c(0,0,0,200,200,200,400,400,400), df.T=x, df.y=y, n.iter=10 )
}
multiTL_fun()
multiTL_fun(distri_noise = "runif(n,a,b)",par_noise = list(a=0.9,b=1.2))
'multiTL_fun'<-
function(irradiation_dose=c(20,20,20,40,40,40,60,60,60),model = "Bailey2001",
distri_scatter="runif(1,s,t)",par_scatter=list(s=0.8,t=1.2),
distri_noise="runif(n,a,b)",par_noise=list(a=0.9,b=1.1)){
#The simulations were performed at 200 sβ, considered as the natural irradiation, and at 400 and 800 sβ,
#corresponding respectively to Nat +200 sβ and Nat + 400 sβ.
model.output <- lapply(irradiation_dose, function(x){
sequence <- list(IRR = c(20, x, 0.1),
#PH = c(220, 10, 5),
TL=c(20,400,5))
data <- model_LuminescenceSignals(
sequence = sequence,
model,
plot = FALSE,
verbose = FALSE,
simulate_sample_history = TRUE )
return(get_RLum(data, recordType = "TL$", drop = FALSE))
})
##combine output curves
TL_curve.merged <- merge_RLum(model.output)
get_TL_curve.merged<-get_RLum(TL_curve.merged)
n.pt<-length(get_TL_curve.merged[[1]]@data [,1])
n.irr<-length(irradiation_dose)
##plot
plot_RLum( object = TL_curve.merged,
xlab = "Temperature [°C]",
ylab = "TL signal [a.u.]",
main = "TL signal with various dose",
legend.text = paste("dose", irradiation_dose, "Gy"),
combine = TRUE)
y<-x<-array(dim=c(n.pt,n.irr))
scatter<-function(distri_scatter,par_scatter){
dscatter<-parse(text=distri_scatter)
eval(dscatter, par_scatter)
}
noise<-function(distri_noise,par_noise){
dnoise<-parse(text=distri_noise)
eval(dnoise, c(list(n=n.pt),par_noise))
}
## scattering and/or noising glow curves
for (i in 1:n.irr){
x[,i]<-round(get_TL_curve.merged[[i]]@data [,1],1)
y[,i]<-get_TL_curve.merged[[i]]@data [,2]*scatter(distri_scatter,par_scatter)*noise(distri_noise,par_noise)#
}
##plot
plot(x[,c(7,8,9)],y[,c(7,8,9)],
col=4,
type="l",
xlab = "Temperature [°C]",
ylab = "TL signal [a.u.]",
main = "TL signal with various dose"
)
lines(x[,c(4,5,6)],y[,c(4,5,6)],col=3)
lines(x[,c(1,2,3)],y[,c(1,2,3)],col=2)
legend("topright",
legend = paste("dose",unique(irradiation_dose)," Gy"),col=c(2,3,4),lty=1)
multiTL<-list( Dose=c(0,0,0,200,200,200,400,400,400), df.T=x, df.y=y, n.iter=10 )
}
multiTL_fun(distri_noise = "runif(n,a,b)",par_noise = list(a=0.9,b=1.2))
multiTL_fun()
multiTL_fun(distri_scatter = "rnorm(1,a,b)",par_scatter = list(a=1,b=2))
multiTL_fun(distri_scatter = "rnorm(1,a,b)",par_scatter = list(a=1,b=0.2))
library(TLpack)
Dose=c(0,0,0,200,200,200,400,400,400)
Dose<-Dose+Dose[1]
Dose
Dose<-Dose+200
Dose
Dose[-Dose[1]]
Dose[-Dose[1]]
usethis::use_package("graphics",type="import")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(TLpack)
usethis::use_package("RLumModel",type="import")
devtools::document()
devtools::document()
devtools::document()
